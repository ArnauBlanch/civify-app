apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest',
                                                      'createDebugCoverageReport']) {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                    '**/*Test*.*', 'android/**/*.*']
  def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
  def mainSrc = "${project.projectDir}/src/main/java"

  sourceDirectories = files([mainSrc])
  classDirectories = files([debugTree])
  executionData = fileTree(dir: "$buildDir", includes: ["jacoco/testDebugUnitTest.exec",
                                                        "outputs/code-coverage/connected/*coverage.ec"])
}

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"
  defaultConfig {
    applicationId "com.civify"
    minSdkVersion 15
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      debuggable = true
      testCoverageEnabled = true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  lintOptions {
    abortOnError true
    warning 'InvalidPackage'
  }
  testOptions {
    unitTests.all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
  }
}

checkstyle {
  configFile rootProject.file('config/checkstyle/checkstyle.xml')
  toolVersion '7.6'
}

task checkstyle(dependsOn: ['clean'], type: Checkstyle) {
  source 'src/main/java'
  include '**/*.java'

  classpath = files()
}

tasks.withType(Checkstyle) {
  showViolations true
  ignoreFailures false

  reports {
    xml.enabled false
    html.enabled true
    html.stylesheet resources.text.fromFile('../config/xsl/checkstyle.xsl')
  }
}

preBuild.dependsOn('checkstyle')
check.dependsOn('checkstyle')
assemble.dependsOn('lint')

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2') {
    // Necessary to avoid version conflicts
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  compile 'com.squareup.retrofit2:retrofit:2.2.0'
  compile 'com.squareup.retrofit2:converter-gson:2.2.0'
  compile 'com.squareup.retrofit2:retrofit-mock:2.2.0'
  compile 'com.squareup.retrofit2:converter-scalars:2.2.0'
  compile 'com.squareup.okhttp3:okhttp:3.6.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
  compile 'com.android.support:appcompat-v7:25.3.1'
  compile 'com.android.support:design:25.3.1'
  compile 'com.android.support:support-v4:25.3.1'
  compile 'com.android.support.constraint:constraint-layout:1.0.2'
  compile 'uk.co.chrisjenx:calligraphy:2.2.0'
  compile 'com.mikhaellopez:circularimageview:3.0.2'
  compile 'com.google.android.gms:play-services-location:10.2.0'
  compile 'com.google.android.gms:play-services-maps:10.2.0'
  compile 'com.squareup.okhttp3:mockwebserver:3.6.0'
  compile 'com.android.support:recyclerview-v7:25.3.1'
  compile 'com.android.support:cardview-v7:25.3.1'
  compile 'com.github.bumptech.glide:glide:3.7.0'
  compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.9.5'
  testCompile 'org.powermock:powermock-module-junit4:1.6.4'
  testCompile 'org.powermock:powermock-module-junit4-rule:1.6.4'
  testCompile 'org.powermock:powermock-api-mockito:1.6.4'
  testCompile 'org.powermock:powermock-classloading-xstream:1.6.4'
  testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.4'
  testCompile 'org.robolectric:robolectric:3.3.1'
  testCompile 'org.robolectric:shadows-support-v4:3.3.1'
  testCompile 'org.json:json:20140107'
  androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
  androidTestCompile 'org.mockito:mockito-core:1.9.5'
}

apply plugin: 'com.google.gms.google-services'